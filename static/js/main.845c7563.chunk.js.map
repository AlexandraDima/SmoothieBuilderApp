{"version":3,"sources":["components/Smoothie/BuildControls/BuildControl/BuildControl.module.css","containers/SmoothieBuilder/SmoothieBuilder.module.css","components/Smoothie/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Smoothie/Smoothie.module.css","components/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/logo.svg","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","hoc/Auxx.js","components/Logo/Logo.js","components/Navigation/NavigationItems.js","components/Layout/Layout.js","components/Smoothie/SmoothieIngredient/SmoothieIngredient.js","components/Smoothie/Smoothie.js","components/Smoothie/BuildControls/BuildControl/BuildControl.js","components/Smoothie/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Smoothie/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","containers/SmoothieBuilder/SmoothieBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js","App.js","serviceWorker.js","index.js","components/Smoothie/SmoothieIngredient/SmoothieIngredient.module.css"],"names":["module","exports","auxx","props","children","Logo","className","classes","src","logo","alt","NavigationItems","useState","menu","menuState","setToggleMenu","show","href","type","data-toggle","onClick","data-target","aria-controls","aria-expanded","aria-label","id","Layout","Auxx","Content","SmoothieIngredient","ingredient","milk","spinach","berries","seeds","vanilla","Smoothie","ingredientsList","Object","keys","ingredients","map","ingredientType","Array","_","i","key","reduce","arr","el","concat","length","textMessage","glass","neck","neckBottom","shine","shine2","lid","top","mid","bot","cupStroke","ingredientsAll","BuildControl","Label","label","Less","removed","disabled","More","added","controls","category","BuildControls","price","toFixed","item","addIngredient","removeIngredient","OrderButton","purchasable","ordered","Backdrop","clicked","Modal","modalClosed","style","transform","opacity","Button","btnType","join","OrderSummary","ingredientSummary","igKey","textTransform","console","log","cancelOrder","continueOrder","instance","axios","create","baseURL","spinner","Loader","INGREDIENT_PRICES","BurgerBuilder","state","totalPrice","purchasing","loading","error","updatePurchaseState","sum","setState","updateCount","updatedIngredients","priceAddition","newPrice","getTheCount","copiedListIngredients","priceDeduction","purchaseHandler","closeModal","alert","get","then","response","data","catch","disableInfo","this","orderSummary","smoothie","Spinner","mainContainer","left","right","Component","CheckoutSummary","Checkout","checkoutCancelled","history","goBack","checkoutContinued","replace","App","path","component","SmoothieBuilder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,mBCAjJD,EAAOC,QAAU,CAAC,cAAgB,uCAAuC,KAAO,8BAA8B,MAAQ,+BAA+B,SAAW,oC,mBCAhKD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,mBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,kBCA7FD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,KAAO,uBAAuB,IAAM,sBAAsB,IAAM,sBAAsB,IAAM,sBAAsB,IAAM,sBAAsB,eAAiB,iCAAiC,YAAc,gC,mBCAtSD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,mBCDzBD,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,mBCA3DD,EAAOC,QAAU,CAAC,gBAAkB,2C,4JCCrBC,EAFF,SAACC,GAAD,OAAWA,EAAMC,U,mECUfC,EANF,kBACT,yBAAKC,UAAWC,IAAQF,MACxB,yBAAKG,IAAKC,IAAMC,IAAI,mBCyBTC,EA7BS,WAAO,IAAD,EACQC,mBAAS,CACvCC,MAAM,IAFgB,mBACnBC,EADmB,KACRC,EADQ,KAQpBC,EAAOF,EAAUD,KAAO,OAAS,GACnC,OACA,yBAAKP,UAAU,0DACf,uBAAGA,UAAU,eAAeW,KAAK,KAAI,kBAAC,EAAD,OACrC,4BAAQX,UAAU,iBAAiBY,KAAK,SAASC,cAAY,WAAWC,QARtD,WAClBL,EAAc,CAACF,MAAOC,EAAUD,QAOgEQ,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAChL,0BAAMlB,UAAU,yBAEpB,yBAAKA,UAAS,sCAAiCU,GAAQS,GAAG,aACtD,wBAAInB,UAAU,sBACd,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,WAAWW,KAAK,KAA7B,yBCHDS,EAXA,SAACvB,GAAD,OACX,kBAACwB,EAAD,KACA,yBAAKrB,UAAU,mBACX,kBAAC,EAAD,OAEJ,0BAAMA,UAAWC,IAAQqB,SACpBzB,EAAMC,Y,gFCiBAyB,EA1BY,SAAC1B,GACpB,IAAI2B,EAAc,KAClB,OAAO3B,EAAMe,MACT,IAAK,OACDY,EAAW,yBAAKxB,UAAWC,IAAQwB,OACnC,MACJ,IAAM,UACFD,EAAa,yBAAKxB,UAAWC,IAAQyB,UACrC,MACJ,IAAM,UACFF,EAAa,yBAAKxB,UAAWC,IAAQ0B,UACrC,MACJ,IAAM,QACFH,EAAa,yBAAKxB,UAAWC,IAAQ2B,QACrC,MACJ,IAAM,UACFJ,EAAa,yBAAKxB,UAAWC,IAAQ4B,UACrC,MACJ,QACIL,EAAa,KAEjB,OAAOA,GCqBJM,EAxCE,SAACjC,GAEd,IAAIkC,EAAkBC,OAAOC,KAAKpC,EAAMqC,aACfC,KAAI,SAAAC,GAGD,OAAO,YAAIC,MAAMxC,EAAMqC,YAAYE,KAAkBD,KAAK,SAAEG,EAAGC,GAC7D,OAAQ,kBAAC,EAAD,CAAoBC,IAAKJ,EAAiBG,EAAG3B,KAAMwB,UAKhEK,QAAO,SAACC,EAAIC,GACT,OAAOD,EAAIE,OAAOD,KACnB,IAM3B,OAJ8B,IAA3BZ,EAAgBc,SACfd,EAAkB,uBAAG/B,UAAWC,IAAQ6C,aAAtB,UAA0C,6BAA1C,SAAqD,6BAArD,UAAiE,6BAAjE,iBAId,yBAAK9C,UAAWC,IAAQ6B,UACpB,yBAAK9B,UAAWC,IAAQ8C,OACxB,yBAAK/C,UAAWC,IAAQ+C,OACxB,yBAAKhD,UAAWC,IAAQgD,aACxB,yBAAKjD,UAAWC,IAAQiD,QACxB,yBAAKlD,UAAWC,IAAQkD,SACxB,yBAAKnD,UAAS,UAAKC,IAAQmD,IAAb,YAAoBnD,IAAQoD,OAC1C,yBAAKrD,UAAS,UAAKC,IAAQmD,IAAb,YAAoBnD,IAAQqD,OAC1C,yBAAKtD,UAAS,UAAKC,IAAQmD,IAAb,YAAoBnD,IAAQsD,OAC1C,yBAAKvD,UAAWC,IAAQuD,YACpB,yBAAKxD,UAAWC,IAAQwD,gBACnB1B,EACL,kBAAC,EAAD,CAAoBnB,KAAK,a,iBCxB9B8C,EAXM,SAAC7D,GAAD,OACjB,yBAAKG,UAAWC,IAAQyD,cACpB,yBAAK1D,UAAWC,IAAQ0D,OAAQ9D,EAAM+D,OAEtC,4BAAQ5D,UAAWC,IAAQ4D,KAAM/C,QAASjB,EAAMiE,QAASC,SAAUlE,EAAMkE,UAAzE,KACA,4BAAQ/D,UAAWC,IAAQ+D,KAAMlD,QAASjB,EAAMoE,OAAhD,O,iBCHFC,EAAU,CACZ,CAACC,SAAS,UAAW,MAAS,UAAWvD,KAAK,WAC9C,CAACuD,SAAS,SAAU,MAAS,UAAWvD,KAAK,WAC7C,CAACuD,SAAS,MAAO,MAAS,QAASvD,KAAK,SACxC,CAACuD,SAAS,WAAY,MAAS,UAAWvD,KAAK,YAoBpCwD,EAlBO,SAACvE,GAAD,OAClB,yBAAKG,UAAWC,IAAQmE,eACpB,6CAAmBvE,EAAMwE,MAAMC,QAAQ,IAEnCJ,EAAS/B,KAAI,SAAAoC,GAAI,OACb,kBAAC,EAAD,CACI/B,IAAK+B,EAAKX,MACVK,MAAO,kBAAMpE,EAAM2E,cAAcD,EAAK3D,OACtCkD,QAAS,kBAAMjE,EAAM4E,iBAAiBF,EAAK3D,OAC3CmD,SAAYlE,EAAMkE,SAASQ,EAAK3D,MAChCgD,MAAOW,EAAKX,WAIxB,4BAAQ5D,UAAWC,IAAQyE,YAAaX,UAAWlE,EAAM8E,YAAa7D,QAASjB,EAAM+E,SAArF,e,mDClBOC,EAJE,SAAChF,GAAD,OACbA,EAAMa,KAAO,yBAAKV,UAAWC,IAAQ4E,SAAU/D,QAASjB,EAAMiF,UAAiB,MCcpEC,EAbD,SAAClF,GAAD,OACV,kBAACwB,EAAD,KACA,kBAAC,EAAD,CAAUX,KAAMb,EAAMa,KAAMoE,QAASjF,EAAMmF,cAC3C,yBACIC,MAAS,CACLC,UAAWrF,EAAMa,KAAO,gBAAkB,qBAC1CyE,QAAStF,EAAMa,KAAO,MAAO,KAEjCV,UAAWC,IAAQ8E,OAClBlF,EAAMC,Y,iBCRAsF,EAJA,SAACvF,GAAD,OACX,4BAAQG,UAAW,CAACC,IAAQmF,OAAQnF,IAAQJ,EAAMwF,UAAUC,KAAK,KAAMxE,QAASjB,EAAMiF,SAAUjF,EAAMC,WCsB3FyF,EAtBM,SAAC1F,GAClB,IAAM2F,EAAoBxD,OAAOC,KAAKpC,EAAMqC,aACnBC,KAAI,SAAAsD,GACD,OAAO,wBAAIjD,IAAKiD,GACL,0BAAMR,MAAO,CAACS,cAAc,eAAgBD,GADhD,IAEK5F,EAAMqC,YAAYuD,OAI1D,OADAE,QAAQC,IAAIJ,GAER,6BACI,0CACA,iFACA,4BAAKA,GACL,2BAAG,2CAAiB3F,EAAMwE,QAC1B,oDACA,kBAAC,EAAD,CAAQS,QAASjF,EAAMgG,YAAaR,QAAQ,UAA5C,UACA,kBAAC,EAAD,CAAQA,QAAQ,UAAUP,QAASjF,EAAMiG,eAAzC,c,QCdGC,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAQ,iD,kBCIGC,GAJC,kBACZ,yBAAKnG,UAAWC,KAAQmG,QAAxB,eCMEC,GAAoB,CACtB3E,QAAQ,GACRC,QAAQ,GACRC,MAAM,EACNC,QAAQ,GAgLGyE,G,4MA5KXC,MAAM,CACFrE,YAAY,KACZsE,WAAY,GACZ7B,aAAa,EACb8B,YAAW,EACXC,SAAQ,EACRC,OAAM,G,EAWVC,oBAAsB,SAAC1E,GAEnB,IAAI2E,EAAK7E,OAAOC,KAAKC,GACJC,KAAI,SAAAsD,GAAU,OAAOvD,EAAYuD,MACjChD,QAAO,SAACoE,EAAItC,GAAQ,OAAOsC,EAAMtC,IAAQ,GAC1DoB,QAAQC,IAAIiB,GACZ,EAAKC,SAAS,CACVnC,YAAYkC,EAAM,K,EAG1BrC,cAAgB,SAAC5D,GAEb,IACMmG,EADW,EAAKR,MAAMrE,YAAYtB,GACT,EAEzBoG,EAAkB,eACjB,EAAKT,MAAMrE,aAGlB8E,EAAmBpG,GAAQmG,EAE3B,IAAME,EAAgBZ,GAAkBzF,GAIlCsG,EAFW,EAAKX,MAAMC,WAEAS,EAE3B,EAAKH,SAAS,CACX5E,YAAa8E,EACbR,WAAWU,IAEf,EAAKN,oBAAoBI,I,EAG7BvC,iBAAmB,SAAC7D,GAChB,IAAMuG,EAAc,EAAKZ,MAAMrE,YAAYtB,GAE3C,KAAGuG,GAAe,GAAlB,CAGA,IAAMJ,EAAcI,EAAc,EAC5BC,EAAqB,eAAO,EAAKb,MAAMrE,aAC7CkF,EAAsBxG,GAAQmG,EAC9B,IAAMM,EAAiBhB,GAAkBzF,GAEnCsG,EADW,EAAKX,MAAMC,WACAa,EAC3B,EAAKP,SAAS,CACX5E,YAAakF,EACbZ,WAAWU,IAEf,EAAKN,oBAAoBQ,K,EAG7BE,gBAAkB,WACd,EAAKR,SAAS,CAACL,YAAY,K,EAG/Bc,WAAa,WACT,EAAKT,SAAS,CAACL,YAAW,K,EAI9BX,cAAgB,WACd0B,MAAM,iB,kEAxEY,IAAD,OACfxB,EAAMyB,IAAI,gEACDC,MAAK,SAAAC,GACF,EAAKb,SAAS,CAAC5E,YAAYyF,EAASC,UAEvCC,OAAM,SAAAlB,GACH,EAAKG,SAAS,CAACH,OAAM,S,+BAoGjC,IAAMmB,EAAY,eACXC,KAAKxB,MAAMrE,aAElB,IAAI,IAAIM,KAAOsF,EACXA,EAAYtF,GAAOsF,EAAYtF,IAAQ,EAI3C,IAAIwF,EAAe,KAChBD,KAAKxB,MAAMrE,cACd8F,EAAe,kBAAC,EAAD,CACfnC,YAAakC,KAAKR,WAClBzB,cAAeiC,KAAKjC,cACpB5D,YAAa6F,KAAKxB,MAAMrE,YACxBmC,MAAO0D,KAAKxB,MAAMC,WAAWlC,QAAQ,MAMrC,IAAI2D,EAAW,kBAACC,GAAD,MAyBf,OAxBGH,KAAKxB,MAAMrE,cACV+F,EACI,yBAAKjI,UAAU,gBACf,yBAAKA,UAAS,6BAAwBC,IAAQkI,cAAhC,YAAiDlI,IAAQmI,OACvE,kBAAC,EAAD,CAAUlG,YAAa6F,KAAKxB,MAAMrE,eAElC,yBAAKlC,UAAS,6BAAwBC,IAAQkI,cAAhC,YAAiDlI,IAAQoI,QACvE,kBAAC,EAAD,CACI7D,cAAeuD,KAAKvD,cACpBC,iBAAkBsD,KAAKtD,iBACvBV,SAAU+D,EACVzD,MAAQ0D,KAAKxB,MAAMC,WACnB7B,YAAaoD,KAAKxB,MAAM5B,YACxBC,QAASmD,KAAKT,qBAOvBS,KAAKxB,MAAMG,UACVsB,EAAcD,KAAKxB,MAAMI,MAAQ,8BAAgC,kBAACuB,GAAD,OAI7D,yBAAKlI,UAAU,mBACf,kBAAC,EAAD,CAAOU,KAAMqH,KAAKxB,MAAME,WAAYzB,YAAa+C,KAAKR,YACjDS,GAEJC,O,GAtKWK,a,oBCAbC,GAXS,SAAC1I,GACrB,OACI,yBAAKG,UAAWC,KAAQsI,iBACxB,mDACI,kBAAC,EAAD,CAAUrG,YAAarC,EAAMqC,gBC0B1BsG,G,4MAhCXjC,MAAM,CACFrE,YAAY,CACRP,QAAQ,EACRC,MAAM,EACNF,QAAQ,EACRG,QAAQ,I,EAWhB4G,kBAAoB,WAChB,EAAK5I,MAAM6I,QAAQC,U,EAEvBC,kBAAoB,WAChB,EAAK/I,MAAM6I,QAAQG,QAAQ,sB,uDAG3B,OACI,kBAAC,GAAD,CACQ3G,YAAa6F,KAAKxB,MAAMrE,YACxBuG,kBAAqBV,KAAKU,kBAC1BG,kBAAqBb,KAAKa,wB,GA5BvBN,aCsBRQ,OAjBf,WACE,OAEE,6BAEE,kBAAC,EAAD,KAEE,kBAAC,IAAD,CAAOC,KAAK,YAAYC,UAAWR,KAEnC,kBAACS,GAAD,SCJYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAD,KAAe,kBAAC,GAAD,OACjBC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdlC,OAAM,SAAAlB,GACLhB,QAAQgB,MAAMA,EAAMqD,a,kBExI5BtK,EAAOC,QAAU,CAAC,QAAU,oCAAoC,MAAQ,kCAAkC,QAAU,oCAAoC,OAAS,mCAAmC,QAAU,oCAAoC,KAAO,iCAAiC,MAAQ,kCAAkC,aAAe,yCAAyC,KAAO,oC","file":"static/js/main.845c7563.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__37gXI\",\"Label\":\"BuildControl_Label__2th5b\",\"Less\":\"BuildControl_Less__2_tKg\",\"More\":\"BuildControl_More__3qDVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"SmoothieBuilder_mainContainer__2c7re\",\"left\":\"SmoothieBuilder_left__2TPVs\",\"right\":\"SmoothieBuilder_right__1wV9R\",\"Smoothie\":\"SmoothieBuilder_Smoothie__37jGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1Br-4\",\"OrderButton\":\"BuildControls_OrderButton__Bo48U\",\"enable\":\"BuildControls_enable__1UkV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__uLt1p\",\"Success\":\"Button_Success__-TGiT\",\"Danger\":\"Button_Danger__9c5kB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Smoothie\":\"Smoothie_Smoothie__1RuBn\",\"glass\":\"Smoothie_glass__3QZhU\",\"neck\":\"Smoothie_neck__37iXy\",\"lid\":\"Smoothie_lid__MVQl3\",\"top\":\"Smoothie_top__3REh-\",\"mid\":\"Smoothie_mid__3S5-m\",\"bot\":\"Smoothie_bot__1arDW\",\"ingredientsAll\":\"Smoothie_ingredientsAll__1CM_T\",\"textMessage\":\"Smoothie_textMessage__1fZjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__yVG1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3u-dc\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f8385f67.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2-rFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1r8W0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__16BTB\",\"load2\":\"Spinner_load2__rWQCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2glmp\"};","const auxx = (props) => props.children;\r\n\r\nexport default auxx;","import React from 'react';\r\nimport classes from './Logo.module.css'\r\nimport logo from '../../assets/logo.svg';\r\n\r\nconst Logo = () => (\r\n    <div className={classes.Logo}>\r\n    <img src={logo} alt=\"SmoothieLogo\" />\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React, {useState} from 'react';\r\nimport Logo from '../Logo/Logo';\r\nconst NavigationItems = () => {\r\n    const [menuState, setToggleMenu]= useState({\r\n        menu: false\r\n    })\r\n    const toggleMenuFnc = () => {\r\n        setToggleMenu({menu: !menuState.menu})\r\n    }\r\n \r\n    const show = menuState.menu ? \"show\" : \"\";\r\n        return (\r\n        <nav className=\"navbar navbar-expand-lg pt-0 pb-0 navbar-light mr-auto\">\r\n        <a className=\"navbar-brand\" href=\"/\"><Logo /></a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" onClick={toggleMenuFnc} data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className={` collapse navbar-collapse + ${show}`} id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/\">Smoothie builder</a>\r\n            </li>\r\n           {/*  <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/checkout\">Checkout</a>\r\n            </li> */}\r\n            </ul>\r\n        </div>\r\n        </nav>\r\n        )\r\n}\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport Auxx from '../../hoc/Auxx';\r\nimport classes from './Layout.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavigationItems from '../Navigation/NavigationItems';\r\n\r\nconst Layout = (props) => (\r\n    <Auxx>\r\n    <div className=\"container-fluid\">\r\n        <NavigationItems />\r\n    </div>\r\n    <main className={classes.Content}>\r\n        {props.children}\r\n    </main>\r\n    </Auxx>\r\n)\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './SmoothieIngredient.module.css';\r\n\r\nconst SmoothieIngredient = (props) => {\r\n        let ingredient =  null;\r\n        switch(props.type){\r\n            case('milk'): \r\n                ingredient=<div className={classes.milk}></div>;\r\n                break;\r\n            case ('spinach'):\r\n                ingredient = <div className={classes.spinach}></div>;\r\n                break;\r\n            case ('berries'):\r\n                ingredient = <div className={classes.berries}></div>;\r\n                break;\r\n            case ('seeds'):\r\n                ingredient = <div className={classes.seeds}></div>;\r\n                break;\r\n            case ('vanilla'):\r\n                ingredient = <div className={classes.vanilla}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n            return ingredient;\r\n    \r\n    \r\n};\r\n\r\nexport default SmoothieIngredient;","import React from 'react';\r\n\r\nimport classes from './Smoothie.module.css';\r\nimport SmoothieIngredient from './SmoothieIngredient/SmoothieIngredient';\r\n\r\nconst Smoothie = (props)=>{\r\n    //Convert the ingredient object into an array of ingredients objects\r\n    let ingredientsList = Object.keys(props.ingredients)\r\n                            .map(ingredientType => { /// [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}] --an array of objects\r\n                               // [...Array(props.ingredients[ingredientType])] ---- 8 empty arrays of the ingredients objects\r\n                               // .map( ( _, i) => ingredientType + i) --- 8 arrays with the ingredient type + the index, ex:spinach0, spinach1...\r\n                                return [...Array(props.ingredients[ingredientType])].map( ( _, i) => {\r\n                                  return  <SmoothieIngredient key={ingredientType + i} type={ingredientType}></SmoothieIngredient>\r\n                                })\r\n                            }) //8 arrays with different object types --[Array(2), Array(0), Array(3), Array(0), Array(0), Array(0), Array(0), Array(0)] \r\n                      \r\n                            //calculate all the sum of all the ingredient types and return a new array of objects --(2) [{…}, {…}]\r\n                            .reduce((arr,el)=> {\r\n                                return arr.concat(el)\r\n                            }, []); \r\n                            \r\n    if(ingredientsList.length === 0){\r\n        ingredientsList = <p className={classes.textMessage}>Please <br/>start <br/>adding <br/> ingredients</p>\r\n    };\r\n     \r\n    return(\r\n            <div className={classes.Smoothie}>\r\n                <div className={classes.glass}>\r\n                <div className={classes.neck}></div>\r\n                <div className={classes.neckBottom}></div>\r\n                <div className={classes.shine}></div>\r\n                <div className={classes.shine2}></div>\r\n                <div className={`${classes.lid} ${classes.top}`}></div>\r\n                <div className={`${classes.lid} ${classes.mid}`}></div>\r\n                <div className={`${classes.lid} ${classes.bot}`}></div>\r\n                <div className={classes.cupStroke}></div>\r\n                    <div className={classes.ingredientsAll}>\r\n                        {ingredientsList}\r\n                    <SmoothieIngredient type=\"milk\"></SmoothieIngredient>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Smoothie;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        \r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>-</button>\r\n        <button className={classes.More} onClick={props.added}>+</button>\r\n    </div>\r\n);\r\n\r\n\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nimport classes from './BuildControls.module.css';\r\n\r\nconst controls =[\r\n    {category:'Veggies', 'label': 'Spinach', type:'spinach'},\r\n    {category:'Fruits', 'label': 'Berries', type:'berries'},\r\n    {category:'Fat', 'label': 'Seeds', type:'seeds'},\r\n    {category:'Flavours', 'label': 'Vanilla', type:'vanilla'}\r\n]\r\nconst BuildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current price: {props.price.toFixed(2)}</p>\r\n        {\r\n            controls.map(item => (\r\n                <BuildControl \r\n                    key={item.label} \r\n                    added={() => props.addIngredient(item.type)} \r\n                    removed={() => props.removeIngredient(item.type)}\r\n                    disabled = {props.disabled[item.type]}\r\n                    label={item.label}>\r\n                    </BuildControl>\r\n            ))\r\n        }\r\n        <button className={classes.OrderButton} disabled={!props.purchasable} onClick={props.ordered}>\r\n        Order now</button>\r\n    </div>\r\n)\r\nexport default BuildControls;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> :null\r\n);\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Auxx from '../../../hoc/Auxx';\r\n\r\nconst Modal = (props) =>(\r\n    <Auxx>\r\n    <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n    <div \r\n        style = {{\r\n            transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity: props.show ? '0.9' :'0'\r\n        }}\r\n        className={classes.Modal}>\r\n        {props.children}\r\n    </div>\r\n    </Auxx>\r\n);\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\nconst Button = (props) => (\r\n    <button className={[classes.Button, classes[props.btnType]].join(' ')} onClick={props.clicked}>{props.children}</button>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst OrderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n                            .map(igKey => {\r\n                                return <li key={igKey}>\r\n                                           <span style={{textTransform:'capitalize'}}>{igKey}</span>: \r\n                                           {props.ingredients[igKey]}\r\n                                        </li>\r\n                            })\r\n    console.log(ingredientSummary);\r\n    return(\r\n        <div>\r\n            <h1>Your order</h1>\r\n            <p>Delicious smoothie with the following ingredients:</p>\r\n            <ul>{ingredientSummary}</ul>\r\n            <p><b>Total price: {props.price}</b></p>\r\n            <p>Continue to checkout?</p>\r\n            <Button clicked={props.cancelOrder} btnType=\"Danger\">CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.continueOrder}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://react-smoothie-order.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Smoothie from '../../components/Smoothie/Smoothie';\r\nimport BuildControls from '../../components/Smoothie/BuildControls/BuildControls';\r\nimport classes from './SmoothieBuilder.module.css';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Smoothie/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n//import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    spinach:10,\r\n    berries:15,\r\n    seeds:5,\r\n    vanilla:3\r\n}\r\nclass BurgerBuilder extends Component{\r\n\r\n    state={\r\n        ingredients:null,\r\n        totalPrice: 20,\r\n        purchasable: false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://react-smoothie-order.firebaseio.com/ingredients.json')\r\n                .then(response => {\r\n                    this.setState({ingredients:response.data});\r\n                })\r\n                .catch(error => {\r\n                    this.setState({error:true})\r\n                })\r\n    }\r\n    updatePurchaseState = (ingredients) =>{\r\n        //sum up all the ingredients values\r\n        let sum= Object.keys(ingredients)\r\n                        .map(igKey => {return ingredients[igKey]})\r\n                        .reduce((sum,item)=>{return sum + item;}, 0);\r\n        console.log(sum);\r\n        this.setState({\r\n            purchasable:sum > 0\r\n        })\r\n    }\r\n    addIngredient = (type) => {\r\n        //access the old count of each ingredient to add upon it\r\n        const oldCount = this.state.ingredients[type];\r\n        const updateCount = oldCount + 1;\r\n        //copy the list of ingredientes\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        //update the type of the copied array\r\n        updatedIngredients[type] = updateCount;\r\n        //get the price for each time\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n         //copy the price from the state\r\n        const oldPrice = this.state.totalPrice;\r\n        //update the new price\r\n        const newPrice = oldPrice + priceAddition;\r\n    \r\n         this.setState({\r\n            ingredients: updatedIngredients,\r\n            totalPrice:newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredient = (type) => {\r\n        const getTheCount = this.state.ingredients[type];\r\n        //check if there are no ingredients and make sure that nothing happens if we try to reduce an ingredient\r\n        if(getTheCount <= 0){\r\n            return;\r\n        }\r\n        const updateCount = getTheCount - 1;\r\n        const copiedListIngredients = {...this.state.ingredients};\r\n        copiedListIngredients[type] = updateCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n         this.setState({\r\n            ingredients: copiedListIngredients,\r\n            totalPrice:newPrice\r\n        }) \r\n        this.updatePurchaseState(copiedListIngredients);\r\n    }\r\n    //check if the order button has been clicked to activate the Order Summary modal\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true})\r\n    }\r\n    //method to close the Modal/Button\r\n    closeModal = () =>{\r\n        this.setState({purchasing:false})\r\n    }\r\n\r\n    //method to continue the order\r\n    continueOrder = () => {\r\n      alert('You continue');\r\n   /*    this.setState({loading: true }); */\r\n     /*  const order = {\r\n          ingredients: this.state.ingredients,\r\n          price: this.state.totalPrice,\r\n          customer:{\r\n              name: 'Ale',\r\n              address: {\r\n                  street:'Testaddress1',\r\n                  country:'France'\r\n              },\r\n              email:'test@test.com'\r\n          },\r\n          deliveryMethod: 'fastest'\r\n      }\r\n         axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({loading:false, purchasing:false})\r\n            })\r\n            .catch(error => {this.setState({loading:false, purchasing:false})});   */\r\n        \r\n          /*   const queryParams=[];\r\n            for(let i in this.state.ingredients){\r\n                queryParams.push(encodeURIComponent (i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n            }\r\n            const queryString = queryParams.join('&');\r\n            this.props.history.push({\r\n                pathname:'/checkout',\r\n                search:'?' + queryString\r\n            }); */\r\n    }\r\n  \r\n    render(){\r\n        //disable the Less button if the ingredients are less or equal to 0\r\n        const disableInfo={\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disableInfo){\r\n            disableInfo[key] = disableInfo[key] <= 0 \r\n            //console.log(disableInfo[key] <= 0)//True or false\r\n              //{spinach:true, kale:false, .....}\r\n        }\r\n        let orderSummary = null;\r\n        if(this.state.ingredients){\r\n        orderSummary = <OrderSummary \r\n        cancelOrder={this.closeModal} \r\n        continueOrder={this.continueOrder} \r\n        ingredients={this.state.ingredients}\r\n        price={this.state.totalPrice.toFixed(2)}\r\n        >\r\n        </OrderSummary>\r\n        }\r\n       \r\n\r\n        let smoothie = <Spinner />\r\n        if(this.state.ingredients){\r\n            smoothie = (\r\n                <div className=\"row mx-auto \">\r\n                <div className={`col-md-6 pl-0 pr-0 ${classes.mainContainer} ${classes.left}`}>\r\n                <Smoothie ingredients={this.state.ingredients} />\r\n                </div>\r\n                <div className={`col-md-6 pl-0 pr-0 ${classes.mainContainer} ${classes.right}`}>\r\n                <BuildControls \r\n                    addIngredient={this.addIngredient} \r\n                    removeIngredient={this.removeIngredient}\r\n                    disabled={disableInfo}\r\n                    price ={this.state.totalPrice}\r\n                    purchasable={this.state.purchasable}\r\n                    ordered={this.purchaseHandler}\r\n                    />\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n      \r\n        if(this.state.loading){\r\n            orderSummary= this.state.error ? \"Ingredients can't be loaded\" : <Spinner />\r\n        }\r\n\r\n        return(\r\n                <div className=\"container-fluid\">\r\n                <Modal show={this.state.purchasing} modalClosed={this.closeModal}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {smoothie}\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n//export default withErrorHandler(BurgerBuilder, axios);\r\nexport default BurgerBuilder;","import React from 'react';\r\nimport Smoothie from '../../Smoothie/Smoothie';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n        <h1>Enjoy your smoothie</h1>\r\n            <Smoothie ingredients={props.ingredients}></Smoothie>\r\n       {/*  <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n        <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button> */}\r\n    </div>\r\n    )\r\n   \r\n}\r\nexport default CheckoutSummary;","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nclass Checkout extends Component{\r\n    state={\r\n        ingredients:{\r\n            berries:1,\r\n            seeds:1,\r\n            spinach:1,\r\n            vanilla:1\r\n        }\r\n    }\r\n/*     componentDidMount(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients={};\r\n        for (let param of query.entries()){\r\n            ingredients[param[0]] = +param[1]\r\n        }\r\n        this.setState({ingredients:ingredients})\r\n    } */\r\n    checkoutCancelled = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    checkoutContinued = () =>{\r\n        this.props.history.replace('/checkout/contact')\r\n    }\r\n    render(){\r\n        return(\r\n            <CheckoutSummary \r\n                    ingredients={this.state.ingredients}\r\n                    checkoutCancelled = {this.checkoutCancelled}\r\n                    checkoutContinued = {this.checkoutContinued} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport { Route} from 'react-router-dom';\r\nimport Layout from './components/Layout/Layout';\r\nimport SmoothieBuilder from './containers/SmoothieBuilder/SmoothieBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div >\r\n      \r\n      <Layout>\r\n  \r\n        <Route path=\"/checkout\" component={Checkout} />\r\n       {/*  <Route path=\"/\" exact component={SmoothieBuilder} />  */}\r\n        <SmoothieBuilder />\r\n      </Layout> \r\n   \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {BrowserRouter} from 'react-router-dom'; \r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter><App /></BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"berries\":\"SmoothieIngredient_berries__1Y7cT\",\"mango\":\"SmoothieIngredient_mango__OvGaP\",\"vanilla\":\"SmoothieIngredient_vanilla__3V0mD\",\"ginger\":\"SmoothieIngredient_ginger__2JukF\",\"spinach\":\"SmoothieIngredient_spinach__3-y-m\",\"kale\":\"SmoothieIngredient_kale__3wn2X\",\"seeds\":\"SmoothieIngredient_seeds__1B8Hn\",\"almondButter\":\"SmoothieIngredient_almondButter__1qev8\",\"milk\":\"SmoothieIngredient_milk__1MzoL\"};"],"sourceRoot":""}